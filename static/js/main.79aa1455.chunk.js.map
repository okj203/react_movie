{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","idx","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yRAiCeA,MA7Bf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OACI,mCACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA+BJ,IAC/B,oBAAII,UAAU,cAAd,SAA8BL,IAC9B,oBAAIK,UAAU,gBAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAcL,UAAU,gBAAxB,SAA0CI,GAAjCC,QAGjB,oBAAGL,UAAU,iBAAb,UAAgCH,EAAQS,MAAM,EAAG,KAAjD,kBC6DLC,G,kNAxEbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAgBVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAEd,4DAPQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAOZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAVzB,2C,uDAgBZ,WACEQ,KAAKN,c,oBAGP,WAEE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,mCACE,yBAASV,UAAU,YAAnB,SACIS,EACA,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAEV,OACE,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,iB,GAvDbE,IAAMC,YCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.79aa1455.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ year, title, summary, poster, genres }){\n    return (\n        <>\n            <div className=\"movie\">\n                <img src={poster} alt={title} title={title}></img>\n                <div className=\"movie__data\">\n                    <h3 className=\"movie__title\">{ title }</h3>\n                    <h5 className=\"movie__year\">{ year }</h5>\n                    <ul className=\"movie__genres\">\n                        {genres.map((genre, idx) => (\n                            <li key={idx} className=\"genres__genre\">{ genre }</li>\n                        ))}\n                    </ul>\n                    <p className=\"movie__summary\">{ summary.slice(0, 180) }...</p>\n                </div>\n            </div>\n        </>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  // add = () => { \n  //   // relying on the state directly is an anti-pattern\n  //   // `current` is equivalent to `this.state`\n  //   this.setState(current => ({ count: current.count + 1})) \n  // };\n  // minus = () => { this.setState({ count: this.state.count - 1}) };\n\n  // can use either `fetch` or `axios` to fetch data\n  // We need to grab the data that comes from the axios request so we can use it in our state\n  // axios.get() is not always fast -> We need to tell JS that componentDidMount() might take time to finish so we want to wait for it\n\n  // async-await: indicate a function is an async and await for the axios request to get back with a response\n  // await cannot be used outside async\n  getMovies = async () => {\n    const { \n      data: { \n        data: { movies } \n      } \n    } = await axios.get(\n      // \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\" //?sort_by=rating -> causes error\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\" \n      );\n    // console.log(movies);\n    this.setState({ movies, isLoading: false });\n    // await fetch(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\")\n    //   .then(response => response.json())\n    //   .then(data => console.log(data));\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    // setState triggers re-render\n    const { isLoading, movies } = this.state;\n    return (\n      <>\n        <section className=\"container\">\n          { isLoading ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          ) : (\n            <div className=\"movies\">\n              {movies.map(movie => {\n              // console.log(movie);\n                return (\n                  <Movie \n                    key={movie.id}\n                    id={movie.id} \n                    year={movie.year} \n                    title={movie.title} \n                    summary={movie.summary} \n                    poster={movie.medium_cover_image}\n                    genres={movie.genres}\n                  />\n              )})}\n            </div>\n            )\n          }\n        </section>\n      </>\n    )  \n  }\n}\n\nexport default App;\n\n// component - a function that returns html\n// jsx - js + html\n\n// $ npm run build\n\n// in package.json add:\n// \"homepage\": \"https://okj203.github.io/react_movie/\"\n// \"scripts\": {\n//   \"deploy\": \"gh-pages -d build\",\n//   \"predeploy\": \"npm run build\"\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}